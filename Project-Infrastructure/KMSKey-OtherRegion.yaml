AWSTemplateFormatVersion: '2010-09-09'
Description: 'KMS Cross-Region Key Replica Example'


Resources:
  S3KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS Key for S3
      PendingWindowInDays: 7
      Enabled: true
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
          - Sid: root-access
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:role/team_c_admin_role
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          
      PendingWindowInDays: 7


  RDSKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS key for RDS encryption
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:role/team_c_admin_role
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
      PendingWindowInDays: 7



  KMSKeyArnParameter:
    DependsOn: RDSKMSKey
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/my/ssm/parameter/kms-key-arn"
      Description: "SSM parameter for KMS Key ARN"
      Type: "String"
      Value: !GetAtt RDSKMSKey.Arn

  # CMK Key for S3 encryption in Ohio region
  MyKeyS3:
    Type: AWS::KMS::Key
    Properties:
      Description: This is a CMK key for encrypting my S3 bucket
      KeyPolicy:
        Id: my_test_key
        Version: '2012-10-17'
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:role/team_c_admin_role
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
            Resource: '*'
      Tags:
        - Key: Name
          Value: Test_Key

  # S3 Bucket for replication
  MyBucketTestDestination:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-test-bucket-destination-replication
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref MyKeyS3
              SSEAlgorithm: aws:kms
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: False
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      Tags:
        - Key: Name
          Value: my-test-bucket-destination-replication

  # S3 Bucket Policy for my-test-bucket-destination-replication
  MyBucketTestDestinationBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyBucketTestDestination
      PolicyDocument:
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action: s3:*
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${MyBucketTestDestination}'
              - !Sub 'arn:aws:s3:::${MyBucketTestDestination}/*'
            Condition:
              Bool:
                aws:SecureTransport: 'false'
            Principal: "*"
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: "*"
            Resource:
              - !Sub 'arn:aws:s3:::${MyBucketTestDestination}'


      

Outputs:
  KMSKeyArn:
    Description: KMS Key ARN
    Value: !Ref RDSKMSKey
    Export:
      Name: !Sub "KMSKeyArn-${AWS::StackName}"
      
  